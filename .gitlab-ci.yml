image: docker:19.03.5
services:
  - docker:19.03.5-dind

variables:
  GIT_SUBMODULE_STRATEGY: normal

before_script:
  - apk add openssl

stages:
  - deploy-dev
  - undeploy-dev
  - deploy-staging
  - undeploy-staging
  - deploy-prod
  - undeploy-prod

#########################################
## Deploy common
#########################################
#
.common-deploy-script: &common-deploy-script |
  kubectl apply -f $CI_PROJECT_DIR/config/ingress-${ENV}.yaml
  helm repo add bitnami https://charts.bitnami.com/bitnami
  export GHOST_PASSWORD=$(openssl rand -base64 12)
  export MARIADB_ROOT_PASSWORD=$(openssl rand -base64 12)
  export MARIADB_PASSWORD=$(openssl rand -base64 12)
  helm install -f $CI_PROJECT_DIR/config/values.yaml ${ENV} bitnami/ghost --set mariadb.auth.rootPassword=$MARIADB_ROOT_PASSWORD,mariadb.auth.password=$MARIADB_PASSWORD,ghostPassword=$GHOST_PASSWORD
  sleep 10
  kubectl rollout status deployment ${ENV}-ghost
  kubectl apply -f $CI_PROJECT_DIR/config/hpa-${ENV}.yaml

########################################
# Deploy Ghost in staging
########################################
deploy-staging:
  stage: deploy-staging
  image: alpine/k8s:1.16.15
  variables:
    ENV: staging
  script:
    - *common-deploy-script
  environment:
    name: staging-eks
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'
      when: manual

########################################
# Deploy Ghost in prod
########################################
deploy-prod:
  stage: deploy-prod
  image: alpine/k8s:1.16.15
  variables:
    ENV: staging
  script:
    - *common-deploy-script
  environment:
    name: prod-eks
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual

########################################
# Deploy Ghost in Dev
########################################
deploy-dev:
  stage: deploy-dev
  image: alpine/k8s:1.16.15
  variables:
    ENV: dev
  script:
    - *common-deploy-script
  environment:
    name: dev-eks
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'

########################################
# Un-deploy Ghost in Staging
########################################
undeploy-staging:
  stage: undeploy-staging
  image: alpine/k8s:1.16.15
  variables:
    ENV: staging
  script:
    - kubectl delete -f $CI_PROJECT_DIR/config/ingress-${ENV}.yaml
    - helm uninstall ${ENV}
    - kubectl delete pvc data-staging-mariadb-0
  environment:
    name: staging-eks
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'
      when: manual

########################################
# Un-deploy Ghost in Prod
########################################
undeploy-prod:
  stage: undeploy-prod
  image: alpine/k8s:1.16.15
  variables:
    ENV: prod
  script:
    - kubectl delete -f $CI_PROJECT_DIR/config/ingress-${ENV}.yaml
    - helm uninstall ${ENV}
    - kubectl delete pvc data-prod-mariadb-0
  environment:
    name: prod-eks
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual

########################################
# Un-deploy Ghost in Dev
########################################
undeploy-dev:
  stage: undeploy-dev
  image: alpine/k8s:1.16.15
  variables:
    ENV: dev
  script:
    - kubectl delete -f $CI_PROJECT_DIR/config/ingress-${ENV}.yaml
    - helm uninstall ${ENV}
    - kubectl delete pvc data-dev-mariadb-0
  environment:
    name: dev-eks
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: manual

